edition: 3.0.0
name: huggingface-app
# access是当前应用所需要的密钥信息配置：
# 密钥配置请参见：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用请参见：https://www.serverless-devs.com/serverless-devs/tool
access: {{ access }}

vars: # 全局变量
  region: {{ region }}
  version: fc-deploy-common-v17.3.3
  name: {{ name }}
  role: {{ roleArn }}
  imageUrl: "registry.{{region}}.aliyuncs.com/sd-test-zhonglun/hf:{{ if pipeline === 'Transformers' }}transformers_v5{{ else }}diffusers_v5{{/if}}"
  gpuInstanceType: {{ gpuInstanceType }}
  gpuMemorySize: {{ gpuMemorySize }}
  memorySize: {{ memorySize }}
  modelID: {{ modelId }}
  modelTask: {{ modelTask }}
  modelAccessToken: {{ accessToken }}

resources:
  model_app_func:
    component: 'fc3'
    props:
      region: ${vars.region}
      role: ${vars.role}
      functionName: ${vars.name}-model-app
      description: Deploy HuggingFace applications of model
      handler: not-used
      timeout: 1800
      memorySize: ${vars.memorySize}
      cpu: 2
      diskSize: 10240
      gpuConfig:
        gpuMemorySize: ${vars.gpuMemorySize}
        gpuType: ${vars.gpuInstanceType}
      instanceConcurrency: 1
      runtime: custom-container
      initializer: 'true'
      initializationTimeout: 300
      internetAccess: true
      vpcConfig: auto
      nasConfig: auto
      customContainerConfig:
#        image: registry.${vars.region}.aliyuncs.com/sd-test-zhonglun/hf:transformers_v5
        image: ${vars.imageUrl}
        port: 8000
      environmentVariables:
        MODEL_ID: ${vars.modelID}
        HUGGING_FACE_HUB_TOKEN: ${vars.modelAccessToken}
        MODEL_TASK: ${vars.modelTask}
        HF_HOME: /mnt/${vars.name}-model-app/hf
        PYTHONPATH: /docker:/mnt/${vars.name}-model-app/python
      triggers:
        - triggerName: httpTrigger
          triggerType: http
          description: 'httpTriggerModel'
          qualifier: LATEST
          triggerConfig:
            authType: anonymous
            disableURLInternet: false
            methods:
              - GET
              - POST
              - PUT

  model_download_func:
    component: 'fc3'
    actions:
      complete-deploy:
        - component: fc3 invoke
    props:
      region: ${vars.region}
      role: ${vars.role}
      functionName: ${vars.name}-model-download
      description: initialize model into nas storage
      handler: index.handler
      timeout: 86400
      memorySize: 16384
      cpu: 8
      diskSize: 10240
      instanceType: e1
      instanceConcurrency: 1
      runtime: python3.10
      code: ./model_download
      internetAccess: true
      vpcConfig: ${resources.model_app_func.output.vpcConfig}
      nasConfig: ${resources.model_app_func.output.nasConfig}
      environmentVariables:
        MODEL_ID: ${vars.modelID}
        HUGGING_FACE_HUB_TOKEN: ${vars.modelAccessToken}
        HF_HOME: /mnt/${vars.name}-model-app/hf
        PYTHONPATH: /code/python

  custom-domain:
    component: fc3-domain
    props: #  组件的属性值
      region: ${vars.region}
      domainName: auto
      protocol: HTTP
      routeConfig:
        routes:
          - functionName: ${resources.model_app_func.props.functionName}
            methods:
              - GET
              - POST
              - PUT
            path: /*
            qualifier: LATEST